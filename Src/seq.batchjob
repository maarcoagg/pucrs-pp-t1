#!/bin/bash
################->  are comments
################-> "#SBATCH" (only one "#") are Batch Script commands

################ Verbose mode

#SBATCH --export=ALL

################

################ Change these parameters according to your requisites
# nodes
#SBATCH -N 1

# tasks (threads)
#SBATCH -n 16

# time
#SBATCH -t 30
# time formats =  "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"

# Exclusive (alloc all threads from each node) or shared (alloc only threads set by "-n" parameter)
#SBATCH --exclusive
##SBATCH --shared

################ Please, change this e-mail address to yours

## Marco = marco.goedert@edu.pucrs.br
## Yuri = yuri.seixas@edu.pucrs.br
#SBATCH --mail-type=ALL
#SBATCH --mail-user=marco.goedert@edu.pucrs.br

################

#SBATCH --no-requeue

################ Output options

# %%     The character "%".
# %A     Job array's master job allocation number.
# %a     Job array ID (index) number.
# %J     jobid.stepid of the running job. (e.g. "128.0")
# %j     jobid of the running job.
# %N     short hostname. This will create a separate IO file per node.
# %n     Node identifier relative to current job (e.g. "0" is the first node of the running job) This will create  a  separate IO file per node.
# %s     stepid of the running job.
# %t     task identifier (rank) relative to current job. This will create a separate IO file per task.
# %u     User name.
# %x     Job name.

## different files for normal output end error output
##SBATCH -o %x.%j.out -e %x.%j.err

# or

## all output in same file
#SBATCH -o outputs/%x.%j.out

################

################ Please, change this directory to your working dir.

## Marco = pp12713
## Yuri = pp12716
#SBATCH -D /home/pp12713/t1

################

################
echo Running on host `hostname`
echo
echo Initial Time is `date`
echo
echo Directory is `pwd`
echo
echo This jobs runs on the following nodes:
echo $SLURM_JOB_NODELIST
echo
echo JOB_ID:
echo $SLURM_JOBID
echo ################

############# Running openMP program

:> outputs/seq.output ; for i in `seq 500 500 1500`; do echo -n "$i - " >> outputs/seq.output ; gcc mandelbrot-seq.c -o bin/mandelbrot-seq -DNPOINTS=$i -fopenmp ; ./bin/mandelbrot-seq >> outputs/seq.output ; done

################

echo Final Time is `date`
